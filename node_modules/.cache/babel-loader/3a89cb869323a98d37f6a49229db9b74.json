{"ast":null,"code":"import _slicedToArray from\"D:/React/text-utils-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import logo from './logo.svg';\nimport{useState}from'react';import{Alert}from'./components/Alert';import'./App.css';// import { About } from './components/About';\nimport{Navbar}from'./components/Navbar';import{TextForm}from'./components/TextForm';import React from'react';// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// Wheather dark mode is enabled or not\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#07105c';showAlert('Dark mode has enabled','success');document.title='Text Utils - Dark Mode';}else{setMode('light');document.body.style.backgroundColor='white';showAlert('Light mode has enabled','primary');document.title='Text Utils - Light Mode';}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",aboutText:\"About Us\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text to analyze\",mode:mode})})]});}export default App;","map":{"version":3,"names":["useState","Alert","Navbar","TextForm","React","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["D:/React/text-utils-clone/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport { Alert } from './components/Alert';\nimport './App.css';\n// import { About } from './components/About';\nimport { Navbar } from './components/Navbar';\nimport {TextForm} from  './components/TextForm';\nimport React from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')  // Wheather dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type) => {\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n         setAlert(null);\n      }, 1500);\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor =  '#07105c';\n      showAlert('Dark mode has enabled','success');\n      document.title = 'Text Utils - Dark Mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor =  'white';\n      showAlert('Light mode has enabled','primary');\n      document.title = 'Text Utils - Light Mode'\n    }\n  }\n  return (\n      <>\n        {/* <Router> */}\n          <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n          <Alert alert={alert}/>\n          <div className=\"container\">\n          {/* <Routes>\n              <Route\n                  path=\"/\"\n                  element={\n                    <React.Fragment> */}\n                      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n                    {/* </React.Fragment>\n                  }\n              />\n              <Route\n                path=\"/About\"\n                element={<About />}\n              />\n          </Routes> */}\n          {/* <Routes>\n            <Route path=\"/about\">\n              <About/>\n            </Route>\n            <Route path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n            </Route>\n          </Routes> */}\n          </div>\n        {/* </Router> */}\n      </>\n  );\n}\nexport default App;"],"mappings":"+GAAA;AACA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,KAAT,KAAsB,oBAAtB,CACA,MAAO,WAAP,CACA;AACA,OAASC,MAAT,KAAuB,qBAAvB,CACA,OAAQC,QAAR,KAAwB,uBAAxB,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA;AACA;AACA;AACA;AACA;6IAGA,QAASC,IAAT,EAAe,CACb,cAAwBL,QAAQ,CAAC,OAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAA2C;AAC3C,eAA0BP,QAAQ,CAAC,IAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,OAAD,CAASC,IAAT,CAAkB,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OADE,CAEPC,IAAI,CAAEA,IAFC,CAAD,CAAR,CAIAE,UAAU,CAAC,UAAM,CACdL,QAAQ,CAAC,IAAD,CAAR,CACF,CAFS,CAEP,IAFO,CAAV,CAGH,CARD,CASA,GAAMM,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,GAAGT,IAAI,GAAK,OAAZ,CAAoB,CAClBC,OAAO,CAAC,MAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAuC,SAAvC,CACAT,SAAS,CAAC,uBAAD,CAAyB,SAAzB,CAAT,CACAM,QAAQ,CAACI,KAAT,CAAiB,wBAAjB,CACD,CALD,IAMI,CACFb,OAAO,CAAC,OAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAuC,OAAvC,CACAT,SAAS,CAAC,wBAAD,CAA0B,SAA1B,CAAT,CACAM,QAAQ,CAACI,KAAT,CAAiB,yBAAjB,CACD,CACF,CAbD,CAcA,mBACI,wCAEI,KAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,SAAS,CAAC,UAApC,CAA+C,IAAI,CAAEd,IAArD,CAA2D,UAAU,CAAES,UAAvE,EAFJ,cAGI,KAAC,KAAD,EAAO,KAAK,CAAEP,KAAd,EAHJ,cAII,YAAK,SAAS,CAAC,WAAf,uBAMY,KAAC,QAAD,EAAU,SAAS,CAAEE,SAArB,CAAgC,OAAO,CAAC,2BAAxC,CAAoE,IAAI,CAAEJ,IAA1E,EANZ,EAJJ,GADJ,CAgCD,CACD,cAAeD,IAAf"},"metadata":{},"sourceType":"module"}